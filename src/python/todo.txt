Create extract/
    Create extract.py
        - Simple utility class to extract a single file
        - provides a utility method 'is_archive' to determine if a file/folder is an archive
            - takes in a SystemFile
            - checks file extension to see if it's a supported archive
            - if it's a folder, checks all the immediate files

    Create manager.py
        - Like Lftp, has a state
        - Returns a status, like List[ArchiveStatus]
            - Name
            - State: EXTRACTING (the only state for now)
        - extract command
            - is async, queues a command
            - params:
                - input: ModelFile - file or directory to extract
            - goes through all files and finds all the archives
            - extract all archive files in directory and all subdirectories
            - maintains directory structure for extraction
        - all extraction is done by a worker thread
        - the extraction task can be single-file
        - need to make a single extract command to its multiple tasks generated
            - also need to make sure multipart archive issue only one task

    Create extract_process.py
        - the main purpose is to move the extraction off the main process
        - wrapper around extract_manager
        - process queues:
            - to receive commands
            - to send out latest status
            - to send out list of extracted files
        - run loop does following:
            - sends commands to manager
            - grabs latest state from manager
        - create extract listener to update list of extracted files

Update model_file.py
    - add states EXTRACTING and EXTRACTED
    - add flag is_extractable
        - when is this determined?
        - can't be scanning files on every model build...
        - let's use a super-light-weight file-extension based detection mechanism here
        - the deeper file-content based check can be done when root is marked for extraction in ExtractManager
        - we can add a GUI setting to always show extract button, in case this flag misses an archive

Update model_builder
    - receives List[ArchiveStatus] to determine EXTRACTING files
    - receives List[str] to determine EXTRACTED files
    - uses extract/is_archive() to set is_archive flag in model file
        - might as well set the flag for all levels of model_file, even though
          only top ones will be extracted

Update controller
    - interact with extractor
        - do the sanity checking on ModelFile state here
    - interact with model_builder: extracting and extracted
        - persist the list of extracted files
        - pass extract status and extracted to model builder
    - new command: EXTRACT

Update controller persist:
    - save the list of extracted file

Update autoqueue:
    - auto-extract support
